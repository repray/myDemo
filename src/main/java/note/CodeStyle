代码规范

1.相同类型的字段数值相比较,使用equals方法,不要使用 ==

2.代码写完以后要使用ide自带的格式化快捷键进行格式化

3.在变量使用前,要校验是够为空,避免空指针异常

4.变量及方法命名要规范,不能词不达意,不要使用拼音写法;变量或方法如果在开发过程中效果/用法有所修改的话,变量/方法名也要及时修改,否则也会导致词不达意

5.接口必须覆盖单元测试或postman接口测试

6.一个类中有两次或以上对同一块代码的调用,就应该考虑将将部分代码提取为方法;
同理,有两个及以上的类需要使用同一方法,就应该考虑将该方法提取为共用方法;

7.注释尽量使用javaDoc格式的注释
/**
 *
 */

8.包名统一使用小写,不要使用驼峰命名
反例: package leetCode;
正例: package leetcode;

9.类名应首字母大写,驼峰命名法 UpperCamelCase ;
反例 LeetCode575
正例 LeetCode575

10.方法名、参数名、成员变量、局部变量都统一使用 lowerCamelCase 风格.
 localValue / getHttpMessage() / inputUserId

11.流程较长的大段代码,应根据代码功能加入空行以作区分,尽量添加说明注释,但不要滥用注释;
    阿里代码规范建议,单个方法的总行数不超过 80 行
    除注释之外的方法签名、左右大括号、方法内代码、空行、回车及任何不可见字符的总行数不超过80 行。
    代码逻辑分清红花和绿叶，个性和共性，绿叶逻辑单独出来成为额外方法，使主干代码更加清晰；共性逻辑抽取成为共性方法，便于复用和维护。

12.不属于代码风格,属于解决问题的首要前提,如果一个环境可以用,另一个环境不能用,并且一次也不能成功,首先要考量两个环境的配置信息是否一致
在查问题日志时,如果和预期不一致,比如没找到日志,这时候就不要再单独查正常的日志输出,要查error等日志